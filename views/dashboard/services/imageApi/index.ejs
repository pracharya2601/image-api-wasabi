<div class="xl:w-full xl:mx-0 h-12 max-w-screen overflow-x-auto sm:block bg-gray-800 shadow rounded border-t border-gray-700">
    <div class="flex border-b px-5" id="tab-holder">
        <a href="/dashboard/services/<%=serviceType%>/<%=serviceId%>#overview">
            <button id="overview" class="focus:outline-none text-sm border-indigo-700 pt-3 rounded-t mr-12 text-indigo-500 hover:text-indigo-400 cursor-pointer">
                <div class="flex items-center mb-3">
                    <span class="ml-1 font-normal">Overview</span>
                </div>
                <div class="w-full h-1 bg-indigo-700 rounded-t-md"></div>
            </button>
        </a>
        <a href="/dashboard/services/<%=serviceType%>/<%=serviceId%>#setting">
            <button id="setting"  class="focus:outline-none text-sm border-indigo-700 pt-3 rounded-t mr-12 hover:text-indigo-400 cursor-pointer">
                <div class="flex items-center mb-3">
                    <span class="ml-1 font-normal">Setting</span>
                </div>
                <div class="w-full h-1 bg-indigo-700 rounded-t-md hidden"></div>
            </button>
        </a>
        <a href="/dashboard/services/<%=serviceType%>/<%=serviceId%>#inactive-1">
            <button id="inactive-1" class="focus:outline-none text-sm border-indigo-700 pt-3 rounded-t mr-12 hover:text-indigo-400 cursor-pointer">
                <div class="flex items-center mb-3">
                    <span class="ml-1 font-normal">inactive</span>
                </div>
                <div class="w-full h-1 bg-indigo-700 rounded-t-md hidden" ></div>
            </button>
        </a>
        <a href="/dashboard/services/<%=serviceType%>/<%=serviceId%>#inactive-2">
            <button id="inactive-2" class="focus:outline-none text-sm border-indigo-700 pt-3 rounded-t mr-12 hover:text-indigo-400 cursor-pointer">
                <div class="flex items-center mb-3">
                    <span class="ml-1 font-normal">inactive</span>
                </div>
                <div class="w-full h-1 bg-indigo-700 rounded-t-md hidden" ></div>
            </button>
        </a>
        <a href="/dashboard/services/<%=serviceType%>/<%=serviceId%>#inactive-3">
        <button id="inactive-3" class="focus:outline-none text-sm border-indigo-700 pt-3 rounded-t mr-12 hover:text-indigo-400 cursor-pointer">
            <div class="flex items-center mb-3">
                <span class="ml-1 font-normal">inactive</span>
            </div>
            <div class="w-full h-1 bg-indigo-700 rounded-t-md hidden" ></div>
        </button>
        </a>
    </div>
</div>

<div data-id="overview" class="">
    <%-include('./tabs/overview.ejs') %>
</div>
<div data-id="setting" id="setting_container" class="hidden">
    <%-include('./tabs/setting.ejs') %>
</div>
<div data-id="inactive-1" class="hidden p-2">
    <%-include('./tabs/inactive.ejs') %>
</div>
<div data-id="inactive-2" class="hidden">
    <%-include('./tabs/modal.ejs') %>
</div>
<div data-id="inactive-3" class="hidden">
    inActive 3
</div>
<script>
    // let fromClass = new FormBuilder({});
    // const inactive_1 = elmId('inactive_1_container');
    // let timeout;
    // const initialiseEventListenet = () => {
    //     let mnmn = inactive_1.getElementsByTagName("input")
    //     for (var inp_f of mnmn) {
    //         inp_f.addEventListener('input', handleInpChange)
    //     }
    //     let delBtn = inactive_1.querySelectorAll('.delete-button');
    //     delBtn.forEach((btn) => {
    //         btn.addEventListener('click', handleDelete)
    //     })
    //     let addBtn = inactive_1.querySelectorAll('.add-button');
    //     addBtn.forEach((btn) => {
    //         btn.addEventListener('click', handleAdd)
    //     })
    // }
    // const handleInpChange = (e) => {
    //     clearTimeout(timeout);
    //     fromClass.updateChange(e)
    //     timeout = setTimeout(() => {fromClass.handleSubmit()}, 3000)
    // }

    // const handleDelete = (e) => {
    //     fromClass.onDeleteHandle(e.target.getAttribute('data-id'))
    //     inactive_1.innerHTML = fromClass.elements;
    //     initialiseEventListenet()
    // }
    // const handleAdd = (e) => {
    //     fromClass.addHandle(e.target.getAttribute('data-id'))
    //     inactive_1.innerHTML = fromClass.elements;
    //     initialiseEventListenet()
    // }
    function loadData() {
        const childItems = document.querySelector('#tab-holder').children;
        for(let item of childItems) {
            let childBtn = item.querySelector('button');
            const elmn = document.querySelector(`[data-id=${childBtn.id}]`)
            if(location.hash === `#${childBtn.id}`) {
                elmn.classList.remove('hidden');
                childBtn.children[1].classList.remove("hidden");
                childBtn.classList.add("text-indigo-500");
            } else {
                elmn.classList.add('hidden');
                childBtn.children[1].classList.add("hidden");
                childBtn.classList.remove("text-indigo-500");
            }
        }
        // if(location.hash === "#setting") {
        //     socket.emit("imageApi", {tab: "setting", dataId: '<%=serviceId%>'}, async (response) => {
        //         fromClass.appendData(response)
        //         inactive_1.innerHTML = fromClass.elements
        //         initialiseEventListenet();
        //     });
        //     socket.emit('all_sessions', {}, async (response) => {
        //         // console.log('data', await response)
        //     })
        // }

    }
    window.onload = loadData
    window.addEventListener('hashchange', loadData);


</script>
<script>

</script>
